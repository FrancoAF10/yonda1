1763995255
5029e51e66aaf58bae66a64ddc4a848b-phpdoc%3Ac72848d7d342aa00913230e6e92592ed-678ee0dc9fa5e341fec8ae44b118fed8
s:71876:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:38:"CargaAsistenciaProcesadaController.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:16:"\App\Controllers";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:16:"\App\Controllers";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Controllers";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:51:"\App\Controllers\CargaAsistenciaProcesadaController";O:35:"phpDocumentor\Reflection\Php\Class_":15:{s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:8:{s:60:"\App\Controllers\CargaAsistenciaProcesadaController::index()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:22;s:47:" phpDocumentor\Reflection\Location columnNumber";i:700;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:28;s:47:" phpDocumentor\Reflection\Location columnNumber";i:910;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:60:"\App\Controllers\CargaAsistenciaProcesadaController::index()";s:36:" phpDocumentor\Reflection\Fqsen name";s:5:"index";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:68:"\App\Controllers\CargaAsistenciaProcesadaController::procesarExcel()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:30;s:47:" phpDocumentor\Reflection\Location columnNumber";i:919;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:258;s:47:" phpDocumentor\Reflection\Location columnNumber";i:11104;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:68:"\App\Controllers\CargaAsistenciaProcesadaController::procesarExcel()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"procesarExcel";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:74:"\App\Controllers\CargaAsistenciaProcesadaController::descargarAsistencia()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:264;s:47:" phpDocumentor\Reflection\Location columnNumber";i:11322;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:304;s:47:" phpDocumentor\Reflection\Location columnNumber";i:13077;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:74:"\App\Controllers\CargaAsistenciaProcesadaController::descargarAsistencia()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"descargarAsistencia";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:82:"\App\Controllers\CargaAsistenciaProcesadaController::estructurarDatosParaReporte()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:9:"registros";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:310;s:47:" phpDocumentor\Reflection\Location columnNumber";i:13266;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:359;s:47:" phpDocumentor\Reflection\Location columnNumber";i:15683;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:82:"\App\Controllers\CargaAsistenciaProcesadaController::estructurarDatosParaReporte()";s:36:" phpDocumentor\Reflection\Fqsen name";s:27:"estructurarDatosParaReporte";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:87:"Estructura los datos planos de asistencia en una matriz pivoteada por Persona y Semana.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:53:"Mantiene la lógica de formato de fecha a dd/mm/yyyy.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:15:"App\Controllers";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:13:{s:8:"Personas";s:19:"App\Models\Personas";s:9:"Contratos";s:20:"App\Models\Contratos";s:8:"Horarios";s:19:"App\Models\Horarios";s:19:"AsistenciaDetallada";s:30:"App\Models\AsistenciaDetallada";s:11:"Spreadsheet";s:36:"PhpOffice\PhpSpreadsheet\Spreadsheet";s:4:"Xlsx";s:36:"PhpOffice\PhpSpreadsheet\Writer\Xlsx";s:9:"IOFactory";s:34:"PhpOffice\PhpSpreadsheet\IOFactory";s:10:"Coordinate";s:40:"PhpOffice\PhpSpreadsheet\Cell\Coordinate";s:9:"Alignment";s:40:"PhpOffice\PhpSpreadsheet\Style\Alignment";s:4:"Fill";s:35:"PhpOffice\PhpSpreadsheet\Style\Fill";s:6:"Border";s:37:"PhpOffice\PhpSpreadsheet\Style\Border";s:5:"Color";s:36:"PhpOffice\PhpSpreadsheet\Style\Color";s:8:"DataType";s:38:"PhpOffice\PhpSpreadsheet\Cell\DataType";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:81:"\App\Controllers\CargaAsistenciaProcesadaController::generarReporteSemanalExcel()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"reporte";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:17:"fechaInicioFiltro";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:14:"fechaFinFiltro";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:367;s:47:" phpDocumentor\Reflection\Location columnNumber";i:15984;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:571;s:47:" phpDocumentor\Reflection\Location columnNumber";i:28701;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:81:"\App\Controllers\CargaAsistenciaProcesadaController::generarReporteSemanalExcel()";s:36:" phpDocumentor\Reflection\Fqsen name";s:26:"generarReporteSemanalExcel";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:65:"Genera el archivo Excel (XLSX) con el formato de reporte semanal.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:175:"CORRECCIÓN FINAL: Lógica de colores ajustada:
- ROJO: Falta Completa.
- AMARILLO: SÓLO si hay Tardanza. Ignora Salida Anticipada y Exceso Refrigerio para el color de fondo.";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:112;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:71:"\App\Controllers\CargaAsistenciaProcesadaController::descargarErrores()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:577;s:47:" phpDocumentor\Reflection\Location columnNumber";i:28945;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:584;s:47:" phpDocumentor\Reflection\Location columnNumber";i:29244;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:71:"\App\Controllers\CargaAsistenciaProcesadaController::descargarErrores()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"descargarErrores";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:76:"\App\Controllers\CargaAsistenciaProcesadaController::descargarErroresExcel()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"errores";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:586;s:47:" phpDocumentor\Reflection\Location columnNumber";i:29253;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:619;s:47:" phpDocumentor\Reflection\Location columnNumber";i:30587;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:76:"\App\Controllers\CargaAsistenciaProcesadaController::descargarErroresExcel()";s:36:" phpDocumentor\Reflection\Fqsen name";s:21:"descargarErroresExcel";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:72:"\App\Controllers\CargaAsistenciaProcesadaController::diferenciaMinutos()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"hora1";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"hora2";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:624;s:47:" phpDocumentor\Reflection\Location columnNumber";i:30672;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:629;s:47:" phpDocumentor\Reflection\Location columnNumber";i:30863;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:72:"\App\Controllers\CargaAsistenciaProcesadaController::diferenciaMinutos()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"diferenciaMinutos";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:49:"Calcula la diferencia en minutos entre dos horas.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:112;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:630;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:51:"\App\Controllers\CargaAsistenciaProcesadaController";s:36:" phpDocumentor\Reflection\Fqsen name";s:34:"CargaAsistenciaProcesadaController";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:31:"\App\Controllers\BaseController";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"BaseController";}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ readOnly";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ attributes";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"678ee0dc9fa5e341fec8ae44b118fed8";s:39:" phpDocumentor\Reflection\Php\File path";s:54:"app/Controllers/CargaAsistenciaProcesadaController.php";s:41:" phpDocumentor\Reflection\Php\File source";s:30869:"<?php
namespace App\Controllers;

use App\Models\Personas;
use App\Models\Contratos;
use App\Models\Horarios;
use App\Models\AsistenciaDetallada;
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;
use PhpOffice\PhpSpreadsheet\IOFactory;
use PhpOffice\PhpSpreadsheet\Cell\Coordinate;
use PhpOffice\PhpSpreadsheet\Style\Alignment;
use PhpOffice\PhpSpreadsheet\Style\Fill;
use PhpOffice\PhpSpreadsheet\Style\Border;
use PhpOffice\PhpSpreadsheet\Style\Color;
use PhpOffice\PhpSpreadsheet\Cell\DataType;

class CargaAsistenciaProcesadaController extends BaseController
{
    // *** Los métodos index() y procesarExcel() no han cambiado. ***
    
    public function index()
    {
        return view('Asistencia/carga_asistencia_procesada', [
            'header' => view('layouts/header'),
            'footer' => view('layouts/footer')
        ]);
    }

    public function procesarExcel()
    {
        // La lógica de procesarExcel no requiere cambios para la estructura del reporte.
        $file = $this->request->getFile('archivo');

        if (!$file || !$file->isValid()) {
            return redirect()->back()->with('error', 'Archivo no válido o no seleccionado.');
        }

        $spreadsheet = IOFactory::load($file->getTempName());
        $sheet = $spreadsheet->getActiveSheet();
        $rows = $sheet->toArray(null, true, true, true); 

        $personasModel   = new Personas();
        $contratosModel  = new Contratos();
        $horariosModel   = new Horarios();
        $asistenciaModel = new AsistenciaDetallada();

        $datosAgrupados = [];

        foreach ($rows as $i => $row) {
            $dni        = trim($row['A'] ?? '');
            $nombre     = trim($row['B'] ?? '');
            $fechaHora  = trim($row['G'] ?? '');

            if ($i === 1 || empty($dni) || empty($fechaHora) || !is_numeric($dni)) {
                continue;
            }
            
            $fecha = null; $hora = null;
            if (is_numeric($fechaHora) && $fechaHora > 1) {
                $timestamp = \PhpOffice\PhpSpreadsheet\Shared\Date::excelToTimestamp($fechaHora);
                $fecha = date('Y-m-d', $timestamp);
                $hora  = date('H:i:s', $timestamp);
            } else {
                $timestamp = strtotime($fechaHora);
                if ($timestamp !== false) {
                    $fecha = date('Y-m-d', $timestamp);
                    $hora  = date('H:i:s', $timestamp);
                }
            }

            if (!$fecha || !$hora) { continue; }

            $key = $dni . '|' . $fecha;
            $datosAgrupados[$key]['dni'] = $dni;
            $datosAgrupados[$key]['nombre'] = $nombre;
            $datosAgrupados[$key]['fechas'][] = $hora;
        }

        $erroresNoExiste = $erroresContrato = $erroresFechaContrato = $erroresFechaFutura = $erroresDuplicado = [];
        $insertados = 0;
        $hoy = date('Y-m-d');

        foreach ($datosAgrupados as $key => $data) {
            $dni    = $data['dni'];
            $nombre = $data['nombre'];
            sort($data['fechas']);
            $fecha = explode('|', $key)[1];
            $horas = $data['fechas'];

            if ($fecha > $hoy) { 
                $erroresFechaFutura[] = ['dni' => $dni, 'nombre' => $nombre, 'fecha_asistencia' => $fecha, 'motivo' => "Fecha de asistencia es futura"];
                continue; 
            }
            $persona = $personasModel->where('numdoc', $dni)->first();
            if (!$persona) { 
                $erroresNoExiste[] = ['dni' => $dni, 'nombre' => $nombre, 'fecha_asistencia' => $fecha, 'motivo' => "No existe persona"];
                continue; 
            }

            $contrato = $contratosModel
                ->where('idpersona', $persona['idpersona'])
                ->where('fechainicio <=', $fecha)
                ->where('fechafin >=', $fecha)
                ->first();
            if (!$contrato) { 
                $contratoExistente = $contratosModel->where('idpersona', $persona['idpersona'])->first();
                if ($contratoExistente) {
                    $erroresFechaContrato[] = ['dni' => $dni, 'nombre' => $nombre, 'fecha_asistencia' => $fecha, 'motivo' => "Contrato no vigente para la fecha"];
                } else {
                    $erroresContrato[] = ['dni' => $dni, 'nombre' => $nombre, 'fecha_asistencia' => $fecha, 'motivo' => "Contrato inexistente"];
                }
                continue; 
            }
            
            $diaSemana = strtolower(date('l', strtotime($fecha)));
            $dias = ['monday' => 'lunes', 'tuesday' => 'martes', 'wednesday' => 'miércoles', 'thursday' => 'jueves', 'friday' => 'viernes', 'saturday' => 'sábado', 'sunday' => 'domingo'];
            $dia = $dias[$diaSemana] ?? null;

            $horario = $horariosModel
                ->where('idcontrato', $contrato['idcontrato'])
                ->where('dia', $dia)
                ->first();

            if (!$horario) { 
                $erroresContrato[] = ['dni' => $dni, 'nombre' => $nombre, 'fecha_asistencia' => $fecha, 'motivo' => "No hay horario para el día $dia"];
                continue; 
            }
            
            $existe = $asistenciaModel
                ->where('idhorario', $horario['idhorario'])
                ->where('diamarcado', $fecha)
                ->first();
            if ($existe) { 
                $erroresDuplicado[] = ['dni' => $dni, 'nombre' => $nombre, 'fecha_asistencia' => $fecha, 'motivo' => "Registro duplicado ya existente"];
                continue; 
            }
            
            $entrada = null; $inicioRefrig = null; $finRefrig = null; $salida = null;
            $numMarcas = count($horas);

            if ($numMarcas >= 4) {
                $entrada = $horas[0]; $inicioRefrig = $horas[1]; $finRefrig = $horas[2]; $salida = $horas[3];
            } elseif ($numMarcas == 3) {
                $marca1 = $horas[0]; $marca2 = $horas[1]; $marca3 = $horas[2];
                
                if ($marca1 >= '11:00:00') {
                    $inicioRefrig = $marca1;
                    $finRefrig = $marca2; 
                    $salida = $marca3;
                    $entrada = null; 
                } else {
                    $entrada = $marca1;
                    $salida = $marca3;
                    if ($marca2 > $horario['iniciorefrigerio']) {
                        $finRefrig = $marca2; 
                    } else {
                        $inicioRefrig = $marca2;
                    }
                }
            } elseif ($numMarcas == 2) {
                $marca1 = $horas[0];
                $marca2 = $horas[1];

                if ($marca1 >= '11:00:00') {
                    $inicioRefrig = $marca1;
                    $salida = $marca2;
                    $entrada = null; 
                } else {
                    $entrada = $marca1;
                    $salida = $marca2;
                }
            } elseif ($numMarcas == 1) {
                $marcaUnica = $horas[0];
                
                if ($marcaUnica >= '11:00:00' && $marcaUnica <= '16:00:00') {
                    $inicioRefrig = $marcaUnica; 
                    $entrada = null; 
                    $salida = null; 
                } else {
                    $entrada = $marcaUnica;
                    $salida = null;
                }
            }
            
            $observaciones = [];
            $tardanza = 0; $salidaAnticipada = 0; $excesoRefrigerio = 0; $minNoLaborados = 0;
            
            $tieneRefrigerio = ($horario['iniciorefrigerio'] != '00:00:00' && $horario['finrefrigerio'] != '00:00:00');
            
            if ($entrada && $entrada > $horario['entrada']) {
                $tardanza = $this->diferenciaMinutos($horario['entrada'], $entrada);
                $observaciones[] = "Tardanza {$tardanza} min";
            } elseif (!$entrada) {
                $observaciones[] = "Cálculo de Tardanza omitido: Falta marca de Entrada.";
            }
            
            if ($salida && $salida < $horario['salida']) {
                $salidaAnticipada = $this->diferenciaMinutos($salida, $horario['salida']);
                $observaciones[] = "Salida anticipada {$salidaAnticipada} min";
            } elseif (!$salida) {
                $observaciones[] = "Cálculo de Salida Anticipada omitido: Falta marca de Salida.";
            }

            if ($tieneRefrigerio) {
                $refrigerioPermitidoMin = $this->diferenciaMinutos($horario['iniciorefrigerio'], $horario['finrefrigerio']);
                
                if ($inicioRefrig && $finRefrig) {
                    $real = $this->diferenciaMinutos($inicioRefrig, $finRefrig);
                    if ($real > $refrigerioPermitidoMin) {
                        $excesoRefrigerio = $real - $refrigerioPermitidoMin;
                        $observaciones[] = "Exceso refrigerio {$excesoRefrigerio} min";
                    }
                } else {
                    $motivo_falta = (!$inicioRefrig && (!$finRefrig || $finRefrig == '00:00:00')) ? "Inicio y Fin" : (!$inicioRefrig ? "Inicio" : "Fin");
                    $observaciones[] = "Cálculo de Exceso Refrigerio omitido: Falta marca de {$motivo_falta} de refrigerio.";
                }
            }
            
            $minNoLaborados = $tardanza + $salidaAnticipada + $excesoRefrigerio;

            $asistenciaModel->insert([
                'diamarcado' => $fecha,
                'entrada' => $entrada, 
                'iniciorefrigerio' => $inicioRefrig, 
                'finrefrigerio' => $finRefrig, 
                'salida' => $salida, 
                'tardanza_minutos' => $tardanza, 
                'salida_anticipada_minutos' => $salidaAnticipada, 
                'exceso_refrigerio_minutos' => $excesoRefrigerio,
                'minnolaborados' => $minNoLaborados,
                'observacion' => implode('; ', $observaciones),
                'idhorario' => $horario['idhorario']
            ]);

            $insertados++;
        }

        $todosErrores = array_merge(
            $erroresNoExiste,
            $erroresContrato,
            $erroresFechaContrato,
            $erroresFechaFutura,
            $erroresDuplicado
        );
        session()->set('errores_asistencia', $todosErrores);

        return view('Asistencia/carga_resultados_procesados', [
            'header' => view('layouts/header'),
            'footer' => view('layouts/footer'),
            'insertados' => $insertados,
            'erroresNoExiste' => $erroresNoExiste,
            'erroresContrato' => $erroresContrato,
            'erroresFechaContrato' => $erroresFechaContrato,
            'erroresFechaFutura' => $erroresFechaFutura,
            'erroresDuplicado' => $erroresDuplicado
        ]);
    }
    
    // ------------------------------------------------------------------
    // FUNCIÓN DE DESCARGA DE REPORTE SEMANAL 
    // ------------------------------------------------------------------
    
    public function descargarAsistencia()
    {
        $fechaInicio = $this->request->getPost('fechaInicio');
        $fechaFin = $this->request->getPost('fechaFin');
        $dni = $this->request->getPost('dni'); 
        
        if (empty($fechaInicio) || empty($fechaFin)) {
             return redirect()->back()->with('error', 'Debe especificar una fecha de inicio y una fecha de fin para generar el reporte.');
        }

        $asistenciaModel = new AsistenciaDetallada();

        $query = $asistenciaModel
            ->select('ad.*, p.numdoc, CONCAT(p.apepaterno, " ", p.apematerno, " ", p.nombres) as nombre_completo, h.dia as dia_semana')
            ->from('asistencias ad') 
            ->join('horarios h', 'h.idhorario = ad.idhorario')
            ->join('contratos c', 'c.idcontrato = h.idcontrato')
            ->join('personas p', 'p.idpersona = c.idpersona')
            ->where('ad.diamarcado >=', $fechaInicio)
            ->where('ad.diamarcado <=', $fechaFin)
            ->orderBy('p.numdoc, ad.diamarcado');
            
        if (!empty($dni)) {
            $query->where('p.numdoc', $dni);
        }

        $registros = $query->findAll();

        if (empty($registros)) {
            $msg = "No se encontraron registros de asistencia procesada entre {$fechaInicio} y {$fechaFin}";
            if (!empty($dni)) {
                $msg .= " para el DNI {$dni}";
            }
            return redirect()->back()->with('error', $msg . ".");
        }

        $reporte = $this->estructurarDatosParaReporte($registros);
        
        // Se llama a la función corregida para generar el Excel
        return $this->generarReporteSemanalExcel($reporte, $fechaInicio, $fechaFin);
    }
    
    /**
     * Estructura los datos planos de asistencia en una matriz pivoteada por Persona y Semana.
     * Mantiene la lógica de formato de fecha a dd/mm/yyyy.
     */
    private function estructurarDatosParaReporte(array $registros)
    {
        $reporte = [];

        foreach ($registros as $reg) {
            $timestamp = strtotime($reg['diamarcado']);
            $numeroSemana = date('W', $timestamp); 
            
            $dni = $reg['numdoc'];
            $nombre = $reg['nombre_completo'];
            $diaSemana = strtolower(date('l', $timestamp)); 
            
            // Formato de fecha a dd/mm/yyyy
            $fechaCompleta = date('d/m/Y', $timestamp); 

            if (!isset($reporte[$numeroSemana])) {
                $reporte[$numeroSemana] = [
                    'inicio_semana' => date('d/m/Y', strtotime('this monday', $timestamp)),
                    'fin_semana' => date('d/m/Y', strtotime('this sunday', $timestamp)),
                    'personas' => [],
                    'fechas_por_dia' => [] // Para almacenar la fecha específica de cada día en la semana
                ];
            }
            
            // Almacenar la fecha real del día para el encabezado
            $reporte[$numeroSemana]['fechas_por_dia'][$diaSemana] = $fechaCompleta;

            if (!isset($reporte[$numeroSemana]['personas'][$dni])) {
                $reporte[$numeroSemana]['personas'][$dni] = [
                    'DNI' => $dni,
                    'Nombre' => $nombre,
                    'dias' => []
                ];
            }
            
            $reporte[$numeroSemana]['personas'][$dni]['dias'][$diaSemana] = [
                'Entrada'               => $reg['entrada'] ? date('H:i', strtotime($reg['entrada'])) : '',
                'InicioRefrigerio'      => $reg['iniciorefrigerio'] ? date('H:i', strtotime($reg['iniciorefrigerio'])) : '',
                'FinRefrigerio'         => $reg['finrefrigerio'] ? date('H:i', strtotime($reg['finrefrigerio'])) : '',
                'Salida'                => $reg['salida'] ? date('H:i', strtotime($reg['salida'])) : '',
                'Tardanza_minutos'      => $reg['tardanza_minutos'],
                'SalidaAnticipada_min'  => $reg['salida_anticipada_minutos'],
                'exceso_refrigerio_minutos' => $reg['exceso_refrigerio_minutos'], 
                'minnolaborados'        => $reg['minnolaborados'],
                'Observacion'           => $reg['observacion'] 
            ];
        }

        return $reporte;
    }

    /**
     * Genera el archivo Excel (XLSX) con el formato de reporte semanal.
     * CORRECCIÓN FINAL: Lógica de colores ajustada:
     * - ROJO: Falta Completa.
     * - AMARILLO: SÓLO si hay Tardanza. Ignora Salida Anticipada y Exceso Refrigerio para el color de fondo.
     */
    private function generarReporteSemanalExcel(array $reporte, $fechaInicioFiltro, $fechaFinFiltro)
    {
        $spreadsheet = new Spreadsheet();
        // Días de Lunes a Sábado.
        $diasOrden = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday']; 
        $diasMap = [
            'monday' => 'LUNES', 'tuesday' => 'MARTES', 'wednesday' => 'MIÉRCOLES', 
            'thursday' => 'JUEVES', 'friday' => 'VIERNES', 'saturday' => 'SÁBADO'
        ];
        // 4 COLUMNAS DE MARCA POR DÍA
        $marcas = ['Entrada', 'I. Refrig.', 'F. Refrig.', 'Salida']; 
        $colsPorDia = count($marcas); 

        $firstSheetCreated = false;

        // Definir estilos de colores para el reporte
        $COLOR_HEADER_BG = ['rgb' => 'D9D9D9']; // Gris para encabezados principales
        $COLOR_SUBHEADER_BG = ['rgb' => 'D0CECE']; // Gris más claro para subtítulos de marcas
        $COLOR_ROJO_FALTA = ['rgb' => 'FF0000']; // Rojo para falta
        $COLOR_AMARILLO_TARDANZA = ['rgb' => 'FFFF00']; // Amarillo para tardanza/penalización
        $COLOR_BLANCO = ['rgb' => 'FFFFFF']; // Blanco por defecto

        // Estilo para bordes de celdas
        $styleBorder = [
            'borders' => [
                'allBorders' => [
                    'borderStyle' => Border::BORDER_THIN,
                    'color' => ['rgb' => '000000'],
                ],
            ],
        ];

        // Ordenar las semanas por número de semana
        ksort($reporte);

        foreach ($reporte as $numSemana => $datosSemana) {
            
            // Crear o seleccionar hoja por número de semana (S1, S2, etc.)
            if (!$firstSheetCreated) {
                $sheet = $spreadsheet->getActiveSheet();
                $sheet->setTitle("S{$numSemana}");
                $firstSheetCreated = true;
            } else {
                $sheet = $spreadsheet->createSheet();
                $sheet->setTitle("S{$numSemana}");
            }
            
            // Ajustes iniciales de la hoja
            $sheet->getDefaultColumnDimension()->setWidth(8); // Ancho por defecto (reducido a 8)
            $sheet->getColumnDimension('A')->setWidth(12); // DNI
            $sheet->getColumnDimension('B')->setWidth(25); // PERSONAL
            $sheet->getDefaultRowDimension()->setRowHeight(15); 

            // ------------------ 1. LEYENDAS Y TÍTULO ------------------
            $sheet->setCellValue('C1', 'Tardanza'); // Etiqueta ajustada solo a Tardanza
            $sheet->getStyle('C1')->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB($COLOR_AMARILLO_TARDANZA['rgb']);
            $sheet->getStyle('C1')->getBorders()->getOutline()->setBorderStyle(Border::BORDER_THIN)->setColor(new Color(Color::COLOR_BLACK));
            $sheet->getStyle('C1')->getFont()->setBold(true);

            // LEYENDA FALTA
            $sheet->setCellValue('E1', 'No marcó asistencia'); // Texto para Falta Completa
            $sheet->getStyle('E1')->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB($COLOR_ROJO_FALTA['rgb']);
            $sheet->getStyle('E1')->getBorders()->getOutline()->setBorderStyle(Border::BORDER_THIN)->setColor(new Color(Color::COLOR_BLACK));
            $sheet->getStyle('E1')->getFont()->setBold(true);

            // Título principal de la semana 
            $sheet->setCellValue('A3', 'ASISTENCIA SEMANAL');
            $sheet->mergeCells('A3:' . Coordinate::stringFromColumnIndex(count($diasOrden) * $colsPorDia + 2) . '3');
            $sheet->getStyle('A3')->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);
            $sheet->getStyle('A3')->getFont()->setBold(true)->setSize(14);
            $sheet->getStyle('A3')->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB('E0E0E0'); 

            // ------------------ 2. ENCABEZADOS DE DÍAS Y MARCAS (Filas 4, 5 y 6) ------------------
            $currentRow = 4; // Fila donde inician los Días de la semana
            $colIndex = 3; // Inicia en Columna C
            
            // Encabezados 'DNI' y 'PERSONAL' (Fila 4 y 5)
            $sheet->setCellValue('A' . $currentRow, 'DNI');
            $sheet->setCellValue('B' . $currentRow, 'PERSONAL');
            $sheet->mergeCells('A' . $currentRow . ':A' . ($currentRow + 2)); // Fusionar DNI en 3 filas
            $sheet->mergeCells('B' . $currentRow . ':B' . ($currentRow + 2)); // Fusionar PERSONAL en 3 filas

            // Alinear y aplicar estilo a DNI/PERSONAL
            $sheet->getStyle('A' . $currentRow . ':B' . ($currentRow + 2))->applyFromArray($styleBorder);
            $sheet->getStyle('A' . $currentRow . ':B' . ($currentRow + 2))->getAlignment()->setVertical(Alignment::VERTICAL_CENTER)->setHorizontal(Alignment::HORIZONTAL_CENTER);
            $sheet->getStyle('A' . $currentRow . ':B' . ($currentRow + 2))->getFont()->setBold(true);
            $sheet->getStyle('A' . $currentRow . ':B' . ($currentRow + 2))->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB($COLOR_HEADER_BG['rgb']);

            foreach ($diasOrden as $diaKey) {
                // Encabezado del DÍA DE LA SEMANA (Fila 4)
                $startCol = Coordinate::stringFromColumnIndex($colIndex);
                $endCol = Coordinate::stringFromColumnIndex($colIndex + $colsPorDia - 1); // 4 columnas por día
                
                $sheet->setCellValue($startCol . $currentRow, $diasMap[$diaKey] ?? '');
                $sheet->mergeCells($startCol . $currentRow . ':' . $endCol . $currentRow);
                $sheet->getStyle($startCol . $currentRow)->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER)->setVertical(Alignment::VERTICAL_CENTER);
                $sheet->getStyle($startCol . $currentRow)->getFont()->setBold(true);
                $sheet->getStyle($startCol . $currentRow)->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB($COLOR_HEADER_BG['rgb']);
                $sheet->getStyle($startCol . $currentRow . ':' . $endCol . $currentRow)->applyFromArray($styleBorder);

                // Encabezado de la FECHA (Fila 5)
                $fechaDelDia = $datosSemana['fechas_por_dia'][$diaKey] ?? ''; // Obtener la fecha real del día (dd/mm/yyyy)
                $sheet->setCellValue($startCol . ($currentRow + 1), $fechaDelDia);
                $sheet->mergeCells($startCol . ($currentRow + 1) . ':' . $endCol . ($currentRow + 1));
                $sheet->getStyle($startCol . ($currentRow + 1))->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);
                $sheet->getStyle($startCol . ($currentRow + 1))->getFont()->setBold(true)->setSize(9);
                $sheet->getStyle($startCol . ($currentRow + 1))->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB($COLOR_HEADER_BG['rgb']);
                $sheet->getStyle($startCol . ($currentRow + 1) . ':' . $endCol . ($currentRow + 1))->applyFromArray($styleBorder);


                // Sub-encabezados de MARCAS (Fila 6)
                for ($i = 0; $i < $colsPorDia; $i++) {
                    $colMark = Coordinate::stringFromColumnIndex($colIndex + $i);
                    $sheet->setCellValue($colMark . ($currentRow + 2), $marcas[$i]);
                    $sheet->getStyle($colMark . ($currentRow + 2))->applyFromArray($styleBorder);
                    $sheet->getStyle($colMark . ($currentRow + 2))->getFont()->setBold(true)->setSize(9);
                    $sheet->getStyle($colMark . ($currentRow + 2))->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);
                    $sheet->getStyle($colMark . ($currentRow + 2))->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB($COLOR_SUBHEADER_BG['rgb']);
                }

                $colIndex += $colsPorDia; // Mover al inicio del siguiente día
            }
            
            // ------------------ 3. DATOS POR PERSONA ------------------
            $rowNum = $currentRow + 3; // Los datos inician en la fila 7
            
            foreach ($datosSemana['personas'] as $dni => $dataPersona) {
                $sheet->setCellValue('A' . $rowNum, $dataPersona['DNI']);
                $sheet->setCellValue('B' . $rowNum, $dataPersona['Nombre']);
                
                // Aplicar bordes a DNI y PERSONAL
                $sheet->getStyle('A' . $rowNum)->applyFromArray($styleBorder);
                $sheet->getStyle('B' . $rowNum)->applyFromArray($styleBorder);

                $colIndex = 3; // Reiniciar para los días de la semana
                
                foreach ($diasOrden as $diaKey) {
                    $datosDia = $dataPersona['dias'][$diaKey] ?? [];
                    
                    // Solo aplicar lógica si hay datos de asistencia procesada para ese día
                    if (isset($dataPersona['dias'][$diaKey])) {
                        $currentCol = $colIndex;
                        
                        // Setear valores de datos (Entrada, I. Refrig., F. Refrig., Salida)
                        $valoresMarcas = [
                            $datosDia['Entrada'] ?? '',
                            $datosDia['InicioRefrigerio'] ?? '',
                            $datosDia['FinRefrigerio'] ?? '',
                            $datosDia['Salida'] ?? ''
                        ];
                        
                        // Lógica de Colores FINAL (AJUSTADA)
                        $colorFondo = $COLOR_BLANCO;
                        
                        // 1. ROJO: Falta Completa (No marcó Entrada Y no marcó Salida)
                        if (empty($datosDia['Entrada']) && empty($datosDia['Salida'])) {
                            $colorFondo = $COLOR_ROJO_FALTA;
                        }
                        // 2. AMARILLO: SÓLO si hay Tardanza
                        elseif ($datosDia['Tardanza_minutos'] > 0) {
                            $colorFondo = $COLOR_AMARILLO_TARDANZA;
                        }
                        // 3. BLANCO: En todos los demás casos (correcto, o penalizaciones de refrigerio/salida anticipada)
                        
                        
                        // Aplicar datos y colores a las 4 celdas de marca del día
                        for ($i = 0; $i < $colsPorDia; $i++) {
                             $colCell = Coordinate::stringFromColumnIndex($currentCol + $i);
                             $sheet->setCellValue($colCell . $rowNum, $valoresMarcas[$i]);
                             $sheet->getStyle($colCell . $rowNum)->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB($colorFondo['rgb']);
                             $sheet->getStyle($colCell . $rowNum)->applyFromArray($styleBorder);
                             $sheet->getStyle($colCell . $rowNum)->getAlignment()->setHorizontal(Alignment::HORIZONTAL_CENTER);
                        }
                    } else {
                        // Si el día no existe en el registro, queda BLANCO por defecto
                        $startColCell = Coordinate::stringFromColumnIndex($colIndex);
                        $endColCell = Coordinate::stringFromColumnIndex($colIndex + $colsPorDia - 1);
                        $sheet->getStyle($startColCell . $rowNum . ':' . $endColCell . $rowNum)->applyFromArray($styleBorder);
                        $sheet->getStyle($startColCell . $rowNum . ':' . $endColCell . $rowNum)->getFill()->setFillType(Fill::FILL_SOLID)->getStartColor()->setRGB($COLOR_BLANCO['rgb']);
                    }
                    
                    $colIndex += $colsPorDia; // Mover al inicio del siguiente bloque de día
                }
                
                $rowNum++;
            }
            
            // Ajustar el ancho de las columnas (final)
            $lastColFinal = Coordinate::stringFromColumnIndex($colIndex - 1);
            foreach (range('A', $lastColFinal) as $c) {
                $sheet->getColumnDimension($c)->setAutoSize(true);
            }
        }
        
        // ------------------ 4. DESCARGA EN XLSX ------------------
        $writer = new Xlsx($spreadsheet);
        $filename = 'reporte_semanal_asistencia_' . $fechaInicioFiltro . '_a_' . $fechaFinFiltro . '.xlsx';

        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header("Content-Disposition: attachment; filename=\"{$filename}\"");
        header('Cache-Control: max-age=0');

        $writer->save('php://output');
        exit;
    }
    
    // ------------------------------------------------------------------
    // FUNCIONES AUXILIARES (Descarga de errores y diferencia de minutos)
    // ------------------------------------------------------------------
    
    public function descargarErrores()
    {
        $errores = session()->get('errores_asistencia') ?? [];
        if (empty($errores)) {
            return redirect()->back()->with('error', 'No hay errores para descargar.');
        }
        return $this->descargarErroresExcel($errores);
    }

    private function descargarErroresExcel(array $errores)
    {
        $spreadsheet = new Spreadsheet();
        $sheet = $spreadsheet->getActiveSheet();

        $sheet->setCellValue('A1', 'DNI');
        $sheet->setCellValue('B1', 'Nombre');
        $sheet->setCellValue('C1', 'Fecha Asistencia');
        $sheet->setCellValue('D1', 'Motivo');

        $rowNum = 2;
        foreach ($errores as $err) {
            $sheet->setCellValue('A' . $rowNum, $err['dni'] ?? '');
            $sheet->setCellValue('B' . $rowNum, $err['nombre'] ?? '');
            $sheet->setCellValue('C' . $rowNum, $err['fecha_asistencia'] ?? '');
            $sheet->setCellValue('D' . $rowNum, $err['motivo'] ?? '');
            $rowNum++;
        }

        foreach (range('A', 'D') as $col) {
            $sheet->getColumnDimension($col)->setAutoSize(true);
        }
        $sheet->getStyle('A1:D1')->getFont()->setBold(true);

        $writer = new Xlsx($spreadsheet);
        $filename = 'errores_asistencia_' . date('Ymd_His') . '.xlsx';

        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header("Content-Disposition: attachment; filename=\"{$filename}\"");
        header('Cache-Control: max-age=0');

        $writer->save('php://output');
        exit;
    }

    /**
     * Calcula la diferencia en minutos entre dos horas.
     */
    private function diferenciaMinutos($hora1, $hora2)
    {
        $t1 = strtotime($hora1);
        $t2 = strtotime($hora2);
        return ($t2 >= $t1) ? round(($t2 - $t1) / 60) : 0;
    }
}
";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";